/**
 * Î™®Î∞îÏùº ÏµúÏ†ÅÌôî Î™®Îìà - Phase 3
 * ÌÑ∞Ïπò Ïù∏ÌÑ∞ÌéòÏù¥Ïä§, Ï†úÏä§Ï≤ò, ÏÑ±Îä• ÏµúÏ†ÅÌôî
 * Version: 1.0.0
 */

class MobileOptimizer {
  constructor() {
    this.touchStartTime = 0;
    this.touchStartX = 0;
    this.touchStartY = 0;
    this.isLongPressing = false;
    this.longPressTimer = null;
    this.debounceTimers = new Map();
    this.swipeThreshold = 100; // 100px Ïù¥ÏÉÅ Ïä§ÏôÄÏù¥ÌîÑ
    this.longPressDelay = 500; // 500ms Î°±ÌîÑÎ†àÏä§
    this.debounceDelay = 300; // 300ms ÎîîÎ∞îÏö¥Ïã±

    // ÌÑ∞Ïπò ÏòÅÏó≠ ÏµúÏÜå ÌÅ¨Í∏∞ Î≥¥Ïû•
    this.minTouchSize = 44; // 44x44px

    this.init();
  }

  /**
   * Ï¥àÍ∏∞Ìôî
   */
  init() {
    this.setupTouchOptimization();
    this.setupSwipeGestures();
    this.setupLongPress();
    this.ensureMinimumTouchSizes();
    this.setupHapticFeedback();
    this.setupDebouncing();
  }

  /**
   * ÌÑ∞Ïπò ÏµúÏ†ÅÌôî ÏÑ§Ï†ï
   */
  setupTouchOptimization() {
    // ÌÑ∞Ïπò Î∞òÏùë ÏµúÏ†ÅÌôî
    document.addEventListener('touchstart', (e) => {
      this.touchStartTime = performance.now();
      this.touchStartX = e.touches[0].clientX;
      this.touchStartY = e.touches[0].clientY;
    }, { passive: true });

    // ÌÑ∞Ïπò ÏßÄÏó∞ Ï†úÍ±∞
    document.addEventListener('touchend', (e) => {
      const touchEndTime = performance.now();
      const responseTime = touchEndTime - this.touchStartTime;

      // ÏÑ±Îä• Î°úÍπÖ (Í∞úÎ∞ú Î™®Îìú)
      if (responseTime > 50) {
        console.warn(`Slow touch response: ${responseTime.toFixed(2)}ms`);
      }
    }, { passive: true });

    // ÎçîÎ∏îÌÉ≠ Ï§å Î∞©ÏßÄ
    let lastTouchTime = 0;
    document.addEventListener('touchend', (e) => {
      const currentTime = new Date().getTime();
      const tapLength = currentTime - lastTouchTime;

      if (tapLength < 500 && tapLength > 0) {
        e.preventDefault();
      }
      lastTouchTime = currentTime;
    });
  }

  /**
   * Ïä§ÏôÄÏù¥ÌîÑ Ï†úÏä§Ï≤ò ÏÑ§Ï†ï
   */
  setupSwipeGestures() {
    let startX = 0;
    let startY = 0;
    let startTime = 0;

    document.addEventListener('touchstart', (e) => {
      startX = e.touches[0].clientX;
      startY = e.touches[0].clientY;
      startTime = Date.now();
    }, { passive: true });

    document.addEventListener('touchend', (e) => {
      const endX = e.changedTouches[0].clientX;
      const endY = e.changedTouches[0].clientY;
      const endTime = Date.now();

      const deltaX = endX - startX;
      const deltaY = endY - startY;
      const deltaTime = endTime - startTime;

      // Ïä§ÏôÄÏù¥ÌîÑ Ï°∞Í±¥ ÌôïÏù∏
      if (Math.abs(deltaX) > this.swipeThreshold &&
          Math.abs(deltaX) > Math.abs(deltaY) &&
          deltaTime < 500) {

        const direction = deltaX > 0 ? 'right' : 'left';
        this.handleSwipe(direction, Math.abs(deltaX));
      }
    }, { passive: true });
  }

  /**
   * Ïä§ÏôÄÏù¥ÌîÑ Ï≤òÎ¶¨
   */
  handleSwipe(direction, distance) {
    if (direction === 'right' && distance > this.swipeThreshold) {
      // Ïò§Î•∏Ï™Ω Ïä§ÏôÄÏù¥ÌîÑ ‚Üí Ïã§Ìñâ Ï∑®ÏÜå
      if (window.actionHistory && window.actionHistory.history.length > 0) {
        this.triggerHaptic('success');
        window.actionHistory.undo();

        // Ïä§ÏôÄÏù¥ÌîÑ ÌîºÎìúÎ∞± ÌëúÏãú
        this.showSwipeFeedback('Ïã§Ìñâ Ï∑®ÏÜåÎê®');
      } else {
        this.triggerHaptic('warning');
        this.showSwipeFeedback('Ïã§Ìñâ Ï∑®ÏÜåÌï† ÏûëÏóÖÏù¥ ÏóÜÏäµÎãàÎã§');
      }
    }
  }

  /**
   * Î°±ÌîÑÎ†àÏä§ ÏÑ§Ï†ï
   */
  setupLongPress() {
    document.addEventListener('touchstart', (e) => {
      const target = e.target.closest('[data-long-press]');
      if (!target) return;

      this.isLongPressing = false;
      this.longPressTimer = setTimeout(() => {
        this.isLongPressing = true;
        this.handleLongPress(target, e);
      }, this.longPressDelay);
    }, { passive: true });

    document.addEventListener('touchend', (e) => {
      if (this.longPressTimer) {
        clearTimeout(this.longPressTimer);
        this.longPressTimer = null;
      }
    }, { passive: true });

    document.addEventListener('touchmove', (e) => {
      if (this.longPressTimer) {
        clearTimeout(this.longPressTimer);
        this.longPressTimer = null;
      }
    }, { passive: true });
  }

  /**
   * Î°±ÌîÑÎ†àÏä§ Ï≤òÎ¶¨
   */
  handleLongPress(element, event) {
    this.triggerHaptic('selection');

    const action = element.dataset.longPress;
    const rect = element.getBoundingClientRect();

    // Ïª®ÌÖçÏä§Ìä∏ Î©îÎâ¥ ÌëúÏãú
    this.showContextMenu(action, {
      x: rect.left + rect.width / 2,
      y: rect.top - 10
    });
  }

  /**
   * Ïª®ÌÖçÏä§Ìä∏ Î©îÎâ¥ ÌëúÏãú
   */
  showContextMenu(action, position) {
    // Í∏∞Ï°¥ Î©îÎâ¥ Ï†úÍ±∞
    const existingMenu = document.getElementById('mobile-context-menu');
    if (existingMenu) {
      existingMenu.remove();
    }

    const menu = document.createElement('div');
    menu.id = 'mobile-context-menu';
    menu.className = 'mobile-context-menu';
    menu.style.cssText = `
      position: fixed;
      top: ${position.y}px;
      left: ${position.x}px;
      background: #333;
      border-radius: 8px;
      padding: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
      z-index: 10000;
      transform: translateX(-50%) translateY(-100%);
      min-width: 120px;
    `;

    // Î©îÎâ¥ Ìï≠Î™©Îì§
    const menuItems = this.getContextMenuItems(action);
    menuItems.forEach(item => {
      const menuItem = document.createElement('div');
      menuItem.className = 'context-menu-item';
      menuItem.textContent = item.label;
      menuItem.style.cssText = `
        padding: 8px 12px;
        color: white;
        cursor: pointer;
        border-radius: 4px;
        font-size: 14px;
        min-height: 44px;
        display: flex;
        align-items: center;
      `;

      menuItem.addEventListener('touchend', (e) => {
        e.preventDefault();
        e.stopPropagation();
        item.action();
        menu.remove();
      });

      menuItem.addEventListener('mouseenter', () => {
        menuItem.style.background = '#555';
      });

      menuItem.addEventListener('mouseleave', () => {
        menuItem.style.background = 'transparent';
      });

      menu.appendChild(menuItem);
    });

    document.body.appendChild(menu);

    // 3Ï¥à ÌõÑ ÏûêÎèô Ï†úÍ±∞
    setTimeout(() => {
      if (menu.parentNode) {
        menu.remove();
      }
    }, 3000);

    // Ïô∏Î∂Ä ÌÑ∞Ïπò Ïãú Ï†úÍ±∞
    const closeMenu = (e) => {
      if (!menu.contains(e.target)) {
        menu.remove();
        document.removeEventListener('touchstart', closeMenu);
      }
    };

    setTimeout(() => {
      document.addEventListener('touchstart', closeMenu);
    }, 100);
  }

  /**
   * Ïª®ÌÖçÏä§Ìä∏ Î©îÎâ¥ Ìï≠Î™© Í∞ÄÏ†∏Ïò§Í∏∞
   */
  getContextMenuItems(action) {
    const items = {
      'player': [
        {
          label: 'üìù ÏàòÏ†ï',
          action: () => console.log('ÌîåÎ†àÏù¥Ïñ¥ ÏàòÏ†ï')
        },
        {
          label: 'üóëÔ∏è ÏÇ≠Ï†ú',
          action: () => console.log('ÌîåÎ†àÏù¥Ïñ¥ ÏÇ≠Ï†ú')
        },
        {
          label: 'üìã Î≥µÏÇ¨',
          action: () => console.log('Ï†ïÎ≥¥ Î≥µÏÇ¨')
        }
      ],
      'default': [
        {
          label: '‚Ü∂ Ïã§Ìñâ Ï∑®ÏÜå',
          action: () => window.actionHistory?.undo()
        },
        {
          label: 'üîÑ ÏÉàÎ°úÍ≥†Ïπ®',
          action: () => location.reload()
        }
      ]
    };

    return items[action] || items['default'];
  }

  /**
   * ÏµúÏÜå ÌÑ∞Ïπò ÌÅ¨Í∏∞ Î≥¥Ïû•
   */
  ensureMinimumTouchSizes() {
    const buttons = document.querySelectorAll('button, [role="button"], .tap-target');

    buttons.forEach(button => {
      const rect = button.getBoundingClientRect();
      const style = window.getComputedStyle(button);

      const currentWidth = parseFloat(style.width) || rect.width;
      const currentHeight = parseFloat(style.height) || rect.height;

      if (currentWidth < this.minTouchSize || currentHeight < this.minTouchSize) {
        // ÏµúÏÜå ÌÅ¨Í∏∞ Î≥¥Ïû•
        button.style.minWidth = `${this.minTouchSize}px`;
        button.style.minHeight = `${this.minTouchSize}px`;
        button.style.display = 'flex';
        button.style.alignItems = 'center';
        button.style.justifyContent = 'center';

        console.log(`Touch size optimized: ${button.textContent || button.className}`);
      }
    });
  }

  /**
   * ÌñÖÌã± ÌîºÎìúÎ∞± ÏÑ§Ï†ï
   */
  setupHapticFeedback() {
    // iOSÏö© ÌñÖÌã± ÌîºÎìúÎ∞±
    if (window.DeviceMotionEvent && typeof DeviceMotionEvent.requestPermission === 'function') {
      this.hasHapticFeedback = true;
    }

    // AndroidÏö© ÏßÑÎèô API
    if (navigator.vibrate) {
      this.hasVibration = true;
    }
  }

  /**
   * ÌñÖÌã± ÌîºÎìúÎ∞± Ïã§Ìñâ
   */
  triggerHaptic(type = 'light') {
    const patterns = {
      'light': [50],
      'medium': [100],
      'heavy': [200],
      'success': [50, 50, 100],
      'warning': [100, 50, 100],
      'error': [200, 100, 200],
      'selection': [10]
    };

    if (this.hasVibration && navigator.vibrate) {
      navigator.vibrate(patterns[type] || patterns['light']);
    }

    // iOS ÌñÖÌã± (ÏõπÏóêÏÑúÎäî Ï†úÌïúÏ†Å)
    if (this.hasHapticFeedback && window.navigator && window.navigator.vibrate) {
      window.navigator.vibrate(patterns[type] || patterns['light']);
    }
  }

  /**
   * ÎîîÎ∞îÏö¥Ïã± ÏÑ§Ï†ï
   */
  setupDebouncing() {
    // ÏûêÏ£º Ìò∏Ï∂úÎêòÎäî Ìï®ÏàòÎì§Ïóê ÎîîÎ∞îÏö¥Ïã± Ï†ÅÏö©
    this.debouncedResize = this.debounce(this.handleResize.bind(this), 250);
    this.debouncedScroll = this.debounce(this.handleScroll.bind(this), 16); // 60fps

    window.addEventListener('resize', this.debouncedResize);
    window.addEventListener('scroll', this.debouncedScroll, { passive: true });
  }

  /**
   * ÎîîÎ∞îÏö¥Ïä§ Ìï®Ïàò
   */
  debounce(func, delay) {
    let timeoutId;
    return (...args) => {
      clearTimeout(timeoutId);
      timeoutId = setTimeout(() => func.apply(this, args), delay);
    };
  }

  /**
   * Î¶¨ÏÇ¨Ïù¥Ï¶à Ï≤òÎ¶¨
   */
  handleResize() {
    // Î∑∞Ìè¨Ìä∏ Î≥ÄÍ≤Ω Ïãú ÌÑ∞Ïπò ÌÅ¨Í∏∞ Ïû¨Í≥ÑÏÇ∞
    this.ensureMinimumTouchSizes();

    // Í∞ÄÏÉÅ ÌÇ§Î≥¥Îìú ÎåÄÏùë
    this.handleVirtualKeyboard();
  }

  /**
   * Ïä§ÌÅ¨Î°§ Ï≤òÎ¶¨
   */
  handleScroll() {
    // Ïä§ÌÅ¨Î°§ ÏÑ±Îä• ÏµúÏ†ÅÌôîÎ•º ÏúÑÌïú Î°úÏßÅ
    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

    // Ïä§ÌÅ¨Î°§ Í∏∞Î∞ò ÏµúÏ†ÅÌôî Î°úÏßÅ Ï∂îÍ∞Ä Í∞ÄÎä•
  }

  /**
   * Í∞ÄÏÉÅ ÌÇ§Î≥¥Îìú ÎåÄÏùë
   */
  handleVirtualKeyboard() {
    const viewportHeight = window.visualViewport ? window.visualViewport.height : window.innerHeight;
    const windowHeight = window.innerHeight;

    if (viewportHeight < windowHeight * 0.7) {
      // Í∞ÄÏÉÅ ÌÇ§Î≥¥ÎìúÍ∞Ä Ïó¥Î¶∞ Í≤ÉÏúºÎ°ú ÌåêÎã®
      document.body.classList.add('keyboard-open');
    } else {
      document.body.classList.remove('keyboard-open');
    }
  }

  /**
   * Ïä§ÏôÄÏù¥ÌîÑ ÌîºÎìúÎ∞± ÌëúÏãú
   */
  showSwipeFeedback(message) {
    const feedback = document.createElement('div');
    feedback.className = 'swipe-feedback';
    feedback.textContent = message;
    feedback.style.cssText = `
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.8);
      color: white;
      padding: 12px 20px;
      border-radius: 8px;
      font-size: 14px;
      z-index: 10000;
      pointer-events: none;
      opacity: 0;
      transition: opacity 0.3s ease;
    `;

    document.body.appendChild(feedback);

    // ÌéòÏù¥Îìú Ïù∏
    setTimeout(() => {
      feedback.style.opacity = '1';
    }, 10);

    // ÌéòÏù¥Îìú ÏïÑÏõÉ ÌõÑ Ï†úÍ±∞
    setTimeout(() => {
      feedback.style.opacity = '0';
      setTimeout(() => {
        if (feedback.parentNode) {
          feedback.parentNode.removeChild(feedback);
        }
      }, 300);
    }, 2000);
  }

  /**
   * ÏÑ±Îä• Î™®ÎãàÌÑ∞ÎßÅ
   */
  monitorPerformance() {
    if (performance.memory) {
      const memory = performance.memory;
      const usedMB = Math.round(memory.usedJSHeapSize / 1024 / 1024 * 100) / 100;

      if (usedMB > 20) {
        console.warn(`High memory usage: ${usedMB}MB`);

        // Î©îÎ™®Î¶¨ Ï†ïÎ¶¨ ÏãúÎèÑ
        this.cleanupMemory();
      }
    }
  }

  /**
   * Î©îÎ™®Î¶¨ Ï†ïÎ¶¨
   */
  cleanupMemory() {
    // ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    this.debounceTimers.forEach(timer => clearTimeout(timer));
    this.debounceTimers.clear();

    // Ïò§ÎûòÎêú DOM Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï†ïÎ¶¨
    const oldMenus = document.querySelectorAll('#mobile-context-menu');
    oldMenus.forEach(menu => menu.remove());

    // Í∞ÄÎπÑÏßÄ Ïª¨Î†âÏÖò Ïú†ÎèÑ (Î∏åÎùºÏö∞Ï†Ä ÏùòÏ°¥Ï†Å)
    if (window.gc) {
      window.gc();
    }
  }

  /**
   * ÎîîÏä§Ìä∏Î°úÏù¥
   */
  destroy() {
    // Ïù¥Î≤§Ìä∏ Î¶¨Ïä§ÎÑà Ï†úÍ±∞
    window.removeEventListener('resize', this.debouncedResize);
    window.removeEventListener('scroll', this.debouncedScroll);

    // ÌÉÄÏù¥Î®∏ Ï†ïÎ¶¨
    if (this.longPressTimer) {
      clearTimeout(this.longPressTimer);
    }

    this.cleanupMemory();
  }
}

// Ï†ÑÏó≠ Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉùÏÑ±
window.mobileOptimizer = new MobileOptimizer();

// ÏÑ±Îä• Î™®ÎãàÌÑ∞ÎßÅ (5Ï¥àÎßàÎã§)
setInterval(() => {
  window.mobileOptimizer.monitorPerformance();
}, 5000);

// Export for module usage
if (typeof module !== 'undefined' && module.exports) {
  module.exports = MobileOptimizer;
}